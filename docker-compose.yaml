version: '3.8'

services:
  nginx:
    image: heartexlabs/label-studio:latest
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT}:8085"
      - "${NGINX_HTTPS_PORT}:8086"
    depends_on:
      - app
    environment:
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
    volumes:
      - ./workspace/mydata:/label-studio/data:rw
      - ./workspace/deploy/nginx/certs:/certs:ro
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - label-studio-network
    command: nginx

  app:
    stdin_open: true
    tty: true
    image: heartexlabs/label-studio:latest
    restart: unless-stopped
    expose:
      - "${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_DB=default
      - POSTGRE_NAME=${POSTGRES_DB}
      - POSTGRE_USER=${POSTGRES_USER}
      - POSTGRE_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRE_PORT=${POSTGRES_PORT}
      - POSTGRE_HOST=${POSTGRES_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LABEL_STUDIO_HOST=${LABEL_STUDIO_HOST:-}
      - LABEL_STUDIO_USERNAME=${LABEL_STUDIO_USERNAME}
      - LABEL_STUDIO_PASSWORD=${LABEL_STUDIO_PASSWORD}
      - LABEL_STUDIO_DISABLE_SIGNUP_WITHOUT_LINK=${LABEL_STUDIO_DISABLE_SIGNUP_WITHOUT_LINK}
      - LABEL_STUDIO_SECRET_KEY=${LABEL_STUDIO_SECRET_KEY}
      - PYTHON_UNBUFFERED=${PYTHON_UNBUFFERED}
      - LABEL_STUDIO_LOG_LEVEL=${LABEL_STUDIO_LOG_LEVEL}
      - LABEL_STUDIO_PORT=${APP_PORT}
    volumes:
      - ./workspace/mydata:/label-studio/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - label-studio-network
    command: label-studio-uwsgi

  db:
    image: pgautoupgrade/pgautoupgrade:13-alpine
    hostname: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_DATA_DIR:-./workspace/mydata/postgres-data}:/var/lib/postgresql/data
      - ./workspace/deploy/pgsql/certs:/var/lib/postgresql/certs:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - label-studio-network

  redis:
    image: redis:6-alpine
    hostname: redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - label-studio-network

volumes:
  redis-data:

networks:
  label-studio-network:
    driver: bridge
